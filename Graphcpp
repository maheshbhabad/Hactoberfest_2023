#include <iostream>
using namespace std;
#define ROW 10
#define COL 10
#define infi 999

class prims{
	int graph[ROW][COL], nodes;
	public:
		void createGraph();
		void display();
		void primsAlgo();
};

void prims::createGraph(){
	int i, j;
	cout<< "\nEnter total offices : ";
	cin >> nodes;
	cout<< "\nEnter the Adjecency matrix :";
	for(i= 0; i< nodes;i++){
		for(j=0; j< nodes; j++){
			cout<<"Entre the distance between" <<i<< "and" <<j<<endl;
			cin >>graph[i][j];
			graph[j][i]= graph[i][j];
		}	
	}
	
	for(i=0; i< nodes; i++){
		for(j=0; j<nodes; j++){
			if(graph[i][j] == 0){
				graph[i][j] = infi; 
			}
		}
	}
}

void prims::display(){
	cout<<"Adjecency matrix"<<endl;
	for(int i=0; i<nodes; i++){
		for(int j=0;j<nodes;j++){
			cout<<" "<<graph[i][j];
		}
		cout<<endl;
	}
} 

void prims::primsAlgo(){
	int selected[ROW], i, j, ne=0;
	int zero = 0, one = 1, min = 0, x, y;
	int cost = 0;
	for (i=0; i<nodes; i++){
		selected[i] = zero;
		
		selected[0] = one;

		while(ne < nodes-1){
			min = infi;
			for(i=0; i < nodes;i++){
				if(selected[i] == one){

					for(j=0; j< nodes; j++){

						if(selected[j] == zero){
							if(min >graph[i][j]){
								min = graph[i][j];
								x = i;
								y = j;
							}
						}
					}
				}
			}
			selected[y] = one;
			cout << "\n" <<x<< "-->" <<y;
			cost += graph[x][y];
			ne++;
		}
		cout<< "\nTotal cost is :"<< cost <<endl;
	}
}


int main(){
	prims MST;
	cout<<"\nPrims Algorithm to connect several offices";
	MST.createGraph();
	MST.display();
	MST.primsAlgo();
	return 0;
}
















